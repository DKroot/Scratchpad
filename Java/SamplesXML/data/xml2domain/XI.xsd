<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Schema version="1.015 DK>corrected to allow empty <fp:document>" -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fp="http://functionpro.com/schema/xi" targetNamespace="http://functionpro.com/schema/xi" elementFormDefault="qualified">
  <!-- Root element of a package -->
  <xs:element name="XI">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element ref="fp:domain"/>
      </xs:sequence>
      <xs:attribute name="version" type="xs:float" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:attribute name="scope">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="private"/>
        <xs:enumeration value="public"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="dir">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="in"/>
        <xs:enumeration value="out"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="pm">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="virtual"/>
        <xs:enumeration value="override"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <!-- DOMAIN ELEMENT - is an assembly of elements in the same namespace -->
  <xs:element name="domain">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:header"/>
        <xs:element ref="fp:artifacts"/>
        <xs:element ref="fp:processes"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="version" type="xs:float" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- [attributename a="" b="" "Text is here"]                       -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="attribute">
    <xs:annotation>
      <xs:documentation>Attribute can contain any XML inside</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="xs:anyType">
          <xs:attribute name="name" type="xs:string" use="required"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- using DomainName;                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="header">
    <xs:annotation>
      <xs:documentation>Header of domain - 1st element</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:alias" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="alias">
    <xs:annotation>
      <xs:documentation>
				Alias id will be used in the attribute 'domain' to refer to the domain
				The full uri of the domain specified in the attribute 'name' of the alias
			</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="id" type="xs:string" use="required"/>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- PROCESSES SECTION -->
  <xs:element name="processes">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:process" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public process ProcessName {...}                               -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="process">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element ref="fp:field" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:task" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="id" type="xs:string" use="required"/>
      <xs:attribute name="parent" type="xs:string" use="optional"/>
      <xs:attribute ref="fp:scope"/>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public process ProcName {                                      -->
  <!--   task ProcName(Type1 param1, Type2 param2) {...}              -->
  <!-- }                                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="task">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:parameters" minOccurs="0"/>
        <xs:element ref="fp:script"/>
      </xs:sequence>
      <xs:attribute ref="fp:scope" use="optional"/>
      <xs:attribute ref="fp:pm" use="optional"/>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- ARTIFACTS SECTION -->
  <xs:element name="artifacts">
    <xs:annotation>
      <xs:documentation>Artifacts of domain</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:event" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:document" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:variant" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:role" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:product" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public event EventName;                                        -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="event">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="id" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public variant VariantName {Alpha, Beta, Gamma}                -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="variant">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element ref="fp:member" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="id" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="member">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- /// Resources defined here ///-->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public document DocName : DocParent {...}                      -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="document">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:attribute" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:field" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:function" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="id" type="xs:string" use="required"/>
      <xs:attribute name="parent" type="xs:string" use="optional"/>
      <xs:attribute ref="fp:scope" use="optional"/>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public role RoleName : RoleParent {...}                        -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="role">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:attribute" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:field" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:function" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="id" type="xs:string" use="required"/>
      <xs:attribute name="parent" type="xs:string" use="optional"/>
      <xs:attribute ref="fp:scope" use="optional"/>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public product ProductName : ProductParent {...}               -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="product">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:attribute" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:field" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:function" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="id" type="xs:string" use="required"/>
      <xs:attribute name="parent" type="xs:string" use="optional"/>
      <xs:attribute ref="fp:scope" use="optional"/>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public document DocName {                                      -->
  <!--   UserName name;                                               -->
  <!-- }                                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="field">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:field" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="domain" type="xs:string" use="optional"/>
      <xs:attribute name="type" type="xs:string" use="required"/>
      <xs:attribute ref="fp:scope" use="optional"/>
      <xs:attribute ref="fp:pm" use="optional"/>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- public document DocName {                                      -->
  <!--   function FuncName(Type1 param1, Type2 param2) {...}          -->
  <!-- }                                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="function">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:parameters" minOccurs="0"/>
        <xs:element ref="fp:script"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute ref="fp:scope" use="optional"/>
      <xs:attribute ref="fp:pm" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="parameters">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:param" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="param">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute ref="fp:dir"/>
      <xs:attribute name="domain" type="xs:string" use="optional"/>
      <xs:attribute name="type" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <!-- EXECUTION SCRIPT -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- {                                                              -->
  <!--   { A; B; C;} | {D; E;} -> {F; G;}                             -->
  <!-- }                                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="script">
    <xs:annotation>
      <xs:documentation>This is a placeholder for the process script elements</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="fp:script" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:set" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:allocate" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:switch" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:failure" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:invoke" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:produce" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:wait" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:onevent" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:exit" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:many" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="fp:start" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
      <xs:attribute name="type" use="optional">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="private"/>
            <xs:enumeration value="public"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- {                                                              -->
  <!--   return; exit; cancel; abort;                                 -->
  <!-- }                                                              -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <xs:element name="exit">
    <xs:complexType>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="scope"/>
            <xs:enumeration value="method"/>
            <xs:enumeration value="process"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="allocate">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="domain" type="xs:string" use="optional"/>
      <xs:attribute name="type" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="branch">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:switch" maxOccurs="unbounded"/>
        <xs:element ref="fp:script"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="failure">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="invoke">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:parameters" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="obj" type="xs:string" use="optional"/>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="many">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:script"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="onevent">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:script"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="produce">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:parameters" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="domain" type="xs:string" use="optional"/>
      <xs:attribute name="type" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="set">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required"/>
      <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="start">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:parameters"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="switch">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:branch" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="wait">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fp:script"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
