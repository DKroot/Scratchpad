#
# This file inside the executable JAR defined property values (priority 15). To override them, an
# application.properties outside of the jar (priority 14), OS environment variables (priority 10),
# command line arguments (priority 4) and other options could be used. See Spring Boot reference
# for more details:
#http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config
#
# Spring Boot uses some relaxed rules for binding Environment properties to @ConfigurationProperties
# beans, so there does not need to be an exact match between the Environment property name and the
# bean property name. Common examples where this is useful include dashed separated
# (e.g. context-path binds to contextPath), and capitalized (e.g. PORT binds to port) environment
# properties.

####################
## Logging, Start ##
# Logging Levels Reference: OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL
# Issues/Todo:
#   1. Disable console output. Attempting this also disables file output. Currently, just pass output to '/dev/null'.
#   2. File rollover not deleting older logs as it should. Likely going to have to make a CRON job to remove old files.
#      + https://github.com/spring-projects/spring-boot/issues/12596
#      + https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html
####################

# Sprint Boot Banner to Log instead of STDOUT.
spring.main.banner-mode=log

## DEV, Ideal Configuration for Development, especially for IntelliJ IDEA.
logging.level.gov=DEBUG
logging.level.cab=DEBUG
logging.level.itas=DEBUG

## DEV/PROD, Totally Silent.
#logging.level.root=OFF

## PROD, Ideal Configuration for Debugging ##
## java -jar itasng.jar > /dev/null 2>&1
#logging.level.root=INFO
#logging.level.org.springframework=INFO
#logging.level.org.hibernate=INFO
#logging.level.gov=DEBUG
#logging.level.cab=DEBUG
#logging.level.itas=DEBUG
#logging.file=itasng.log
## Increase log size to 100 MB, rotates afterwards.
#logging.file.max-size=100MB
## Keep 3 old log files before deletion during rotation. NOT WORKING, 2019-09-26.
## logging.file.max-history=3

## PROD, Ideal Configuration for normal deployment. ##
## java -jar itasng.jar > /dev/null 2>&1
#logging.level.root=INFO
#logging.level.org.springframework=INFO
#logging.level.org.hibernate=INFO
#logging.level.gov=WARN
#logging.level.cab=WARN
#logging.level.itas=DEBUG
#logging.file=itasng.log
## Increase log size to 100 MB, rotates afterwards.
#logging.file.max-size=100MB
## Keep 3 old log files before deletion during rotation. NOT WORKING, 2019-09-26.
## logging.file.max-history=3

####################
## Logging, Old
## ...keep for reference... ##
####################
#debug=true
#trace=true

# Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
# Log configuration file (e.g. logback-spring.xml) could be located in the root of the classpath,
# or in this location:
# logging.config=

# Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`

# logging.level.root=WARN
###logging.level.gov=DEBUG
###logging.level.cab=DEBUG
###logging.level.itas=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.hibernate=ERROR

# ANSI color output: ALWAYS or DETECT (default) or NEVER
# spring.output.ansi.enabled=ALWAYS

# logging.file=my.log
# Location of the log file: an absolute or relative path. For instance `/var/log`.
# Log files will rotate when they reach 10 MB.
# logging.path=/var/log

####################
## Logging, End ##
####################

## Embedded Server ##

#server.servlet.context-path=/

# Default port: 8080
#server.port=4242

### SSO ###
#server.servlet.context-path=/dk
#server.port=2929

## Static Web Content ##
# By default Spring Boot will serve static content from a directory called /static (or /public or
#/resources or /META-INF/resources) in the classpath

### Spring MVC ###
# By default, resources are mapped on /** but you can tune that
#spring.mvc.static-path-pattern=/**

### Static Resources ###

# Static resource locations (replace the default values with a list of directory locations).
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,
#classpath:/static/,classpath:/public/

## JAX-RS/Jersey ##
# Preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson
# when both it and Jackson are on the classpath.
#spring.http.converters.preferred-json-mapper=jackson

### Jersey ###
#spring.jersey.init.jersey.config.server.provider.packages=gov.nih.cit.itasng.rest

# Path that serves as the base URI for the application. Overrides the value of "@ApplicationPath"
# if specified.
#spring.jersey.application-path=/api

### Jackson ###

#### ObjectMapper Customizations ####

# The ObjectMapper instance created by default has the following customized properties:
# * MapperFeature.DEFAULT_VIEW_INCLUSION is disabled
# * DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES is disabled

# Feature that determines whether Date (and date/time) values (and Date-based things like
# Calendars) are to be serialized as numeric timestamps (true: default), or as strings (false:
# default if spring.jackson.date-format is specified).
# If textual representation is used, the actual format is spring.jackson.date-format.
#spring.jackson.serialization.write-dates-as-timestamps=true

# SimpleDateFormat string or a fully-qualified date format class name. Time zone must be included
# for correct format conversions.
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSX

# Disable FAIL_ON_EMPTY_BEANS to serialize exceptions in resources returning Lists.
spring.jackson.serialization.fail-on-empty-beans=false

## Persistence ##

### Datasource ###
# Data Source URL for jTDS JDBC driver
# jTDS default statement caching (maxStatements=500) causes intermittent exceptions:
# "java.sql.SQLException: The prepared statement handle {n} is not valid in this context. ..."
#spring.datasource.url=jdbc:jtds:sqlserver://citbasitassql2a.nih.gov/ITASREGRESSION;maxStatements=0
#spring.datasource.url=jdbc:jtds:sqlserver://citbasitassql2a.nih.gov/itasregression;maxStatements=0

## Data Source URL for MS JDBC driver
#spring.datasource.url=jdbc:sqlserver://citbasitassql2a.nih.gov:1433;database=itasdev2

# JDBC driver is automatically configured based on datasource URL.
#spring.datasource.driver-class-name=net.sourceforge.jtds.jdbc.Driver

# Credentials are required to be supplied in the environment: `SPRING_DATASOURCE_USERNAME`, `SPRING_DATASOURCE_PASSWORD`
# or CLI/property file(s): `spring.datasource.username`, `spring.datasource.password`

#### Datasource Pooling ####
# Fully qualified name of the connection pool implementation to use. By default, it is
# auto-detected from the classpath.
# Documentation: https://www.baeldung.com/spring-boot-tomcat-connection-pool
#spring.datasource.type=

#spring.datasource.tomcat.max-idle=5
#spring.datasource.tomcat.min-idle=1

# The maximum number of milliseconds that the pool will wait (when there are no available
# connections) for a connection to be returned before throwing an exception. Default = 30000 (30 s).
#spring.datasource.tomcat.max-wait=10000

# Maximum number of active connections that can be allocated from this pool at the same time.
# The default value is 100
#spring.datasource.tomcat.max-active=50
# Validate the connection before borrowing it from the pool.
#spring.datasource.tomcat.test-on-borrow=true

# The indication of whether objects will be validated by the idle object evictor (if any). If an
#object fails to validate, it will be dropped from the pool. The default value is false and this
#property has to be set in order for the pool cleaner/test thread is to run.
#spring.datasource.tomcat.test-while-idle=true

# Validation query must be specified for jTDS because it lacks implementation of
# Connection.isValid()
#spring.datasource.tomcat.validation-query=SELECT 1

# Avoid excess validation, only run validation at most at this frequency - time in milliseconds.
#If a connection is due for validation, but has been validated previously within this interval,
#it will not be validated again. The default value is 3000 (3 seconds).
#spring.datasource.tomcat.validation-interval=60000

# StatementCache caches PreparedStatement and/or CallableStatement instances on a connection.
# It causes intermittent exceptions:
# "java.sql.SQLException: The prepared statement handle {n} is not valid in this context. ..."
#spring.datasource.tomcat.jdbc-interceptors=StatementCache

#spring.datasource.tomcat.use-statement-facade=false

# In the absence of DB connection application throws errors on start (after timeout) and becomes
# unresponsive. Set initial size to 0 to bring application up at least.
#spring.datasource.tomcat.initial-size=0

### JPA / Hibernate ###

# Bypass auto-check on startup
#spring.jpa.database=sql_server

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

# Enable logging (printing to stdout) of SQL statements.
# Hibernate prints them with bind variable placeholders ("?").
# 2019-09-26, not necessary; logs already printing SQL information, including parameters...leave commented-out.
# spring.jpa.show-sql=true

# The shutdown endpoint (/actuator/shutdown)

management.endpoint.shutdown.enabled=true

# TODO Some sort of authorization is needed here
management.endpoints.web.exposure.include=info,health,shutdown

## Local Development / Experiments ##

## Thymeleaf ##

# spring-boot-devtools automatically disables Thymeleaf template caching at development time.
#spring.thymeleaf.cache=false